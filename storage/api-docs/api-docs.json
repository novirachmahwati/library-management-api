{
    "openapi": "3.0.0",
    "info": {
        "title": "Library Management System API",
        "description": "",
        "contact": {
            "email": "novirachmahwati@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "/api/1.0"
        }
    ],
    "paths": {
        "/authors": {
            "get": {
                "tags": [
                    "Authors"
                ],
                "summary": "Get all authors",
                "description": "Display a listing of the resource.",
                "operationId": "33b4ca0e528a8b6298d9942781a0c85a",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter results by string. Search author name.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/order_by"
                    },
                    {
                        "$ref": "#/components/parameters/order_direction"
                    },
                    {
                        "$ref": "#/components/parameters/per_page"
                    },
                    {
                        "$ref": "#/components/parameters/page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of authors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/author"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Authors"
                ],
                "summary": "Create a new author",
                "operationId": "d998cf74685b2e9609bcd48ab986f678",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/authorEditable"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Author created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/author"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/authors/{id}": {
            "get": {
                "tags": [
                    "Authors"
                ],
                "summary": "Get author by ID",
                "description": "Returns a single author",
                "operationId": "getAuthorById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the author to get",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/author"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Data not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Authors"
                ],
                "summary": "Update an existing author",
                "description": "Returns updated author data",
                "operationId": "updateAuthor",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the author to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/authorEditable"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Data not found"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Authors"
                ],
                "summary": "Delete an existing author",
                "description": "Deletes a author and returns no content",
                "operationId": "deleteAuthor",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the author to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Data not found"
                    }
                }
            }
        },
        "/authors/{id}/books": {
            "get": {
                "tags": [
                    "Associations"
                ],
                "summary": "Retrieve books by author",
                "description": "Returns a list of books written by a specific author",
                "operationId": "getBooksByAuthor",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the author",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/book"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Author not found"
                    }
                }
            }
        },
        "/books": {
            "get": {
                "tags": [
                    "Books"
                ],
                "summary": "Get all books",
                "description": "Display a listing of the resource.",
                "operationId": "28b9632495ac5f6f66b2e52001d510e6",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter results by string. Search book title.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/order_by"
                    },
                    {
                        "$ref": "#/components/parameters/order_direction"
                    },
                    {
                        "$ref": "#/components/parameters/per_page"
                    },
                    {
                        "$ref": "#/components/parameters/page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of books",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/book"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Books"
                ],
                "summary": "Create a new book",
                "operationId": "b10f5fe35eefa47e974dd4b333d870b1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/bookEditable"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Book created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/book"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                }
            }
        },
        "/books/{id}": {
            "get": {
                "tags": [
                    "Books"
                ],
                "summary": "Get book by ID",
                "description": "Returns a single book",
                "operationId": "getBookById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the book to get",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/book"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Data not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Books"
                ],
                "summary": "Update an existing book",
                "description": "Returns updated book data",
                "operationId": "updateBook",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the book to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/bookEditable"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Data not found"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Books"
                ],
                "summary": "Delete an existing book",
                "description": "Deletes a book and returns no content",
                "operationId": "deleteBook",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the book to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Data not found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "metadata": {
                "properties": {
                    "filter": {
                        "type": "string"
                    },
                    "sort_by": {
                        "type": "string"
                    },
                    "sort_order": {
                        "type": "string",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    "count": {
                        "type": "integer"
                    },
                    "total_pages": {
                        "type": "integer"
                    },
                    "current_page": {
                        "type": "integer"
                    },
                    "form": {
                        "type": "integer"
                    },
                    "last_page": {
                        "type": "integer"
                    },
                    "path": {
                        "type": "string"
                    },
                    "per_page": {
                        "type": "integer"
                    },
                    "to": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "authorEditable": {
                "properties": {
                    "name": {
                        "description": "The attributes that are mass assignable.",
                        "type": "string"
                    },
                    "bio": {
                        "type": "string"
                    },
                    "birth_date": {
                        "type": "string",
                        "format": "date"
                    }
                },
                "type": "object"
            },
            "author": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/authorEditable"
                    },
                    {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "bookEditable": {
                "properties": {
                    "title": {
                        "description": "The attributes that are mass assignable.",
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "publish_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "author_id": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "book": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/bookEditable"
                    },
                    {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object"
                    }
                ]
            }
        },
        "responses": {
            "404": {
                "description": "Not Found",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "422": {
                "description": "Unprocessable Entity",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "errors": {
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "parameters": {
            "filter": {
                "name": "filter",
                "in": "query",
                "description": "Filter results by string. Searches Name, Description, and Status. Status must match exactly. Others can be a substring.",
                "schema": {
                    "type": "string"
                }
            },
            "order_by": {
                "name": "order_by",
                "in": "query",
                "description": "Field to order results by",
                "schema": {
                    "type": "string"
                }
            },
            "order_direction": {
                "name": "order_direction",
                "in": "query",
                "schema": {
                    "type": "string",
                    "default": "asc",
                    "enum": [
                        "asc",
                        "desc"
                    ]
                }
            },
            "per_page": {
                "name": "per_page",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "default": "10"
                }
            },
            "page": {
                "name": "page",
                "in": "query",
                "schema": {
                    "type": "integer",
                    "default": "1"
                }
            }
        }
    },
    "tags": [
        {
            "name": "Authors",
            "description": "Authors"
        },
        {
            "name": "Associations",
            "description": "Associations"
        },
        {
            "name": "Books",
            "description": "Books"
        }
    ]
}